version: "3.8"

networks:
  proxy:
    external: true

services:
  traefik:
    image: traefik:latest
    environment:
      - TZ=Asia/Bangkok
    ports:
      - target: 80 # entrypoint: web (redriect schema to (https: 443: websecure))
        published: 80
        protocol: tcp
        mode: host
      - target: 443 # entrypoint: websecure
        published: 443
        protocol: tcp
        mode: host
      - 8080:8080 # entrypoint: dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/:/traefik/configs/
      - ./certs/:/certs/
      - ./logs:/var/log/traefik/
      - ./TraefikConfigs.yaml:/TraefikConfigs.yaml
    networks:
      - proxy
      # - proxy-overlay
    command: --configFile=/TraefikConfigs.yaml

    labels:
      - "traefik.enable=true"
    deploy: # for swarm mod
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
        delay: 2s
        window: 120s

  logrotate:
    image: vegardit/traefik-logrotate:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw # required to send USR1 signal to Traefik after log rotation
      - ./logs:/var/log/traefik:rw # folder containing access.log file
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    environment:
      TZ: "Asia/Bangkok"
      # all environment variables are optional and show the default values:
      LOGROTATE_LOGS: "/var/log/traefik/*.log" # log files to rotate, directory must match volume mount
      LOGROTATE_TRIGGER_INTERVAL: daily # rotate daily, must be one of: daily, weekly, monthly, yearly
      LOGROTATE_TRIGGER_SIZE: 1G # rotate if log file size reaches 50MB
      LOGROTATE_MAX_BACKUPS: 90 # keep 14 backup copies per rotated log file
      LOGROTATE_START_INDEX: 1 # first rotated file is called access.1.log
      CRON_SCHEDULE: "0 0 * * *"
      CRON_LOG_LEVEL: 8 # see https://unix.stackexchange.com/a/414010/378036
      # command to determine the id of the container running Traefik:
      TRAEFIK_CONTAINER_ID_COMMAND: docker ps --quiet --filter name=traefik_traefik
    networks:
      - proxy
